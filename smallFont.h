#ifndef _SMALLFONT_H_
#define _SMALLFONT_H_

// a small 3x5 number font - ok, it's 4x8 ;)
const uint8_t  numberFont3x5[] PROGMEM = {
  // 0
  0b00011110,
  0b00010001,
  0b00001111,
  0b00000000,
  // 1
  0b00000000,
  0b00011111,
  0b00000000,
  0b00000000,
  // 2
  0b00011101,
  0b00010101,
  0b00010111,
  0b00000000,
  // 3
  0b00010001,
  0b00010101,
  0b00011111,
  0b00000000,
  // 4
  0b00000111,
  0b00000100,
  0b00011110,
  0b00000000,
  // 5
  0b00010111,
  0b00010101,
  0b00011101,
  0b00000000,
  // 6
  0b00011111,
  0b00010100,
  0b00011100,
  0b00000000,
  // 7
  0b00000001,
  0b00011001,
  0b00000111,
  0b00000000,
  // 8
  0b00011111,
  0b00010101,
  0b00011111,
  0b00000000,
  // 9
  0b00000111,
  0b00000101,
  0b00011111,
  0b00000000,
};

// a small 3x5 charachter font
const uint8_t  charachterFont3x5[] PROGMEM = {
  // 0
  0b00011110,
  0b00010001,
  0b00001111,
  0b00000000,
  // 1
  0b00000000,
  0b00011111,
  0b00000000,
  0b00000000,
  // 2
  0b00011101,
  0b00010101,
  0b00010111,
  0b00000000,
  // 3
  0b00010001,
  0b00010101,
  0b00011111,
  0b00000000,
  // 4
  0b00000111,
  0b00000100,
  0b00011110,
  0b00000000,
  // 5
  0b00010111,
  0b00010101,
  0b00011101,
  0b00000000,
  // 6
  0b00011111,
  0b00010100,
  0b00011100,
  0b00000000,
  // 7
  0b00000001,
  0b00011001,
  0b00000111,
  0b00000000,
  // 8
  0b00011111,
  0b00010101,
  0b00011111,
  0b00000000,
  // 9
  0b00000111,
  0b00000101,
  0b00011111,
  0b00000000,
  // :
  0b00000000,
  0b00001010,
  0b00000000,
  0b00000000,
  // ;
  0b00010000,
  0b00001010,
  0b00000000,
  0b00000000,
  // <
  0b00000100,
  0b00001010,
  0b00010001,
  0b00000000,
  // =
  0b00001010,
  0b00001010,
  0b00001010,
  0b00000000,
  // >
  0b00010001,
  0b00001010,
  0b00000100,
  0b00000000,
  // ?
  0b00000001,
  0b00010101,
  0b00000111,
  0b00000000,
  // @
  0b00001110,
  0b00010101,
  0b00011011,
  0b00000000,
  // A
  0b00011110,
  0b00000101,
  0b00011110,
  0b00000000,
  // B
  0b00011111,
  0b00010101,
  0b00001010,
  0b00000000,
  // C
  0b00001110,
  0b00010001,
  0b00010001,
  0b00000000,
  // D
  0b00011111,
  0b00010001,
  0b00001110,
  0b00000000,
  // E
  0b00011111,
  0b00010101,
  0b00010001,
  0b00000000,
  // F
  0b00011111,
  0b00000101,
  0b00000001,
  0b00000000,
  // G
  0b00001110,
  0b00010001,
  0b00011001,
  0b00000000,
  // H
  0b00011111,
  0b00000100,
  0b00011111,
  0b00000000,
  // I
  0b00000000,
  0b00011111,
  0b00000000,
  0b00000000,
  // J
  0b00011000,
  0b00010000,
  0b00001111,
  0b00000000,
  // K
  0b00011111,
  0b00000100,
  0b00011011,
  0b00000000,
  // L
  0b00011111,
  0b00010000,
  0b00010000,
  0b00000000,
  // M
  0b00011111,
  0b00000110,
  0b00011111,
  0b00000000,
  // N
  0b00011111,
  0b00001110,
  0b00011111,
  0b00000000,
  // O
  0b00001110,
  0b00010001,
  0b00001110,
  0b00000000,
  // P
  0b00011111,
  0b00000101,
  0b00000010,
  0b00000000,
  // Q
  0b00001110,
  0b00010001,
  0b00011110,
  0b00000000,
  // R
  0b00011111,
  0b00000101,
  0b00011010,
  0b00000000,
  // S
  0b00010010,
  0b00010101,
  0b00001001,
  0b00000000,
  // T
  0b00000001,
  0b00011111,
  0b00000001,
  0b00000000,
  // U
  0b00011111,
  0b00010000,
  0b00011111,
  0b00000000,
  // V
  0b00001111,
  0b00011000,
  0b00001111,
  0b00000000,
  // W
  0b00011111,
  0b00001100,
  0b00011111,
  0b00000000,
  // X
  0b00011011,
  0b00000100,
  0b00011011,
  0b00000000,
  // Y
  0b00000111,
  0b00011100,
  0b00000111,
  0b00000000,
  // Z
  0b00011001,
  0b00010101,
  0b00010011,
  0b00000000,
};

// a 4 bit zoom table for charachter enlargement
const uint8_t  nibbleZoom[] PROGMEM = {
  0b00000000, // 0b0000
  0b00000011, // 0b0001
  0b00001100, // 0b0010
  0b00001111, // 0b0011
  0b00110000, // 0b0100
  0b00110011, // 0b0101
  0b00111100, // 0b0110
  0b00111111, // 0b0111
  0b11000000, // 0b1000
  0b11000011, // 0b1001
  0b11001100, // 0b1010
  0b11001111, // 0b1011
  0b11110000, // 0b1100
  0b11110011, // 0b1101
  0b11111100, // 0b1110
  0b11111111, // 0b1111
};

#endif
